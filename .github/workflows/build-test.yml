# # This workflow builds and tests the project against multiple Spectre.Console versions
# # It reads the versions to test from the JSON file generated by update-package-versions.yml
# # If the JSON file doesn't exist, it falls back to hardcoded versions
# name: .NET Build and Test

# on: 
#   push:
#   pull_request:
#   workflow_run:
#     workflows: ["Update Spectre Package Versions"]
#     types:
#       - completed
# defaults:
#   run:
#     working-directory: src

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         spectre_version: ${{ fromJson(hashFiles('.github/package-versions/spectre-console-cli-versions.json') != '' && 
#                                       fromJson(readFile('.github/package-versions/spectre-console-cli-versions.json')).versions || 
#                                       '["0.46.1-preview.0.19", "0.47.0", "0.48.0", "0.48.1-preview.0.35"]') }}

#     steps:
#     - uses: actions/checkout@v3
#       with:
#         fetch-depth: 0 # Fetches all history for all tags and branches

#     - name: Set up .NET Core
#       uses: actions/setup-dotnet@v2
#       with:
#         dotnet-version: '8.0.x'

#     - name: Clean
#       run: dotnet clean CiFilter.slnf

#     - name: Install Spectre dependency
#       run: | 
#         dotnet remove ./JKToolKit.Spectre.AutoCompletion.Tests/JKToolKit.Spectre.AutoCompletion.Tests.csproj package Spectre.Console
#         dotnet remove ./JKToolKit.Spectre.AutoCompletion.Tests/JKToolKit.Spectre.AutoCompletion.Tests.csproj package Spectre.Console.Cli
#         dotnet remove ./JKToolKit.Spectre.AutoCompletion.Tests/JKToolKit.Spectre.AutoCompletion.Tests.csproj package Spectre.Console.Testing

#         dotnet add ./JKToolKit.Spectre.AutoCompletion.Tests/JKToolKit.Spectre.AutoCompletion.Tests.csproj package Spectre.Console --version ${{ matrix.spectre_version }}
#         dotnet add ./JKToolKit.Spectre.AutoCompletion.Tests/JKToolKit.Spectre.AutoCompletion.Tests.csproj package Spectre.Console.Cli --version ${{ matrix.spectre_version }}
#         dotnet add ./JKToolKit.Spectre.AutoCompletion.Tests/JKToolKit.Spectre.AutoCompletion.Tests.csproj package Spectre.Console.Testing --version ${{ matrix.spectre_version }}

#     - name: Restore
#       run: dotnet restore CiFilter.slnf

#     - name: Build
#       run: dotnet build CiFilter.slnf --no-restore

#     # Optionally, you can add a test step if you have tests in your solution
#     - name: Test
#       run: dotnet test CiFilter.slnf --no-build --verbosity normal
